---
export interface Props {
  tabs: string[];
  defaultTab?: number;
}

const { tabs, defaultTab = 0 } = Astro.props;
const id = Math.random().toString(36).substring(7);
---

<div class="tabs-container" data-tabs-id={id}>
  <div class="tabs-header">
    {tabs.map((tab, index) => (
      <button 
        class={`tab-button ${index === defaultTab ? 'active' : ''}`}
        data-tab-index={index}
      >
        {tab}
      </button>
    ))}
  </div>
  <div class="tabs-content">
    <slot />
  </div>
</div>

<script define:vars={{ id, defaultTab }}>
  document.addEventListener('DOMContentLoaded', () => {
    const container = document.querySelector(`[data-tabs-id="${id}"]`);
    const buttons = container.querySelectorAll('.tab-button');
    const panels = container.querySelectorAll('.tab-panel');
    
    // 초기 패널 설정
    panels.forEach((panel, index) => {
      panel.style.display = index === defaultTab ? 'block' : 'none';
    });
    
    // 버튼 클릭 이벤트
    buttons.forEach((button, index) => {
      button.addEventListener('click', () => {
        // 모든 버튼과 패널 비활성화
        buttons.forEach(btn => btn.classList.remove('active'));
        panels.forEach(panel => panel.style.display = 'none');
        
        // 선택된 버튼과 패널 활성화
        button.classList.add('active');
        if (panels[index]) {
          panels[index].style.display = 'block';
        }
      });
    });
  });
</script>

<style>
  .tabs-container {
    margin: var(--spacing-6) 0;
    border: 1px solid var(--color-border);
    border-radius: var(--radius-lg);
    overflow: hidden;
  }

  .tabs-header {
    display: flex;
    background: var(--color-surface);
    border-bottom: 1px solid var(--color-border);
  }

  .tab-button {
    flex: 1;
    padding: var(--spacing-3) var(--spacing-4);
    background: transparent;
    border: none;
    color: var(--color-text-muted);
    font-size: var(--text-sm);
    font-weight: var(--font-medium);
    cursor: pointer;
    transition: all var(--transition-base);
    position: relative;
  }

  .tab-button:not(:last-child) {
    border-right: 1px solid var(--color-border);
  }

  .tab-button:hover {
    background: var(--color-surface-hover);
    color: var(--color-text);
  }

  .tab-button.active {
    color: var(--color-accent);
    background: var(--color-background);
  }

  .tab-button.active::after {
    content: '';
    position: absolute;
    bottom: -1px;
    left: 0;
    right: 0;
    height: 2px;
    background: var(--color-accent);
  }

  .tabs-content {
    padding: var(--spacing-6);
    background: var(--color-background);
  }

  /* 탭 패널 스타일 */
  :global(.tab-panel) {
    display: none;
  }

  :global(.tab-panel > :first-child) {
    margin-top: 0;
  }

  :global(.tab-panel > :last-child) {
    margin-bottom: 0;
  }
</style>